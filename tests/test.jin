import extern "./foo"

fn extern hello()
let extern answer: int

fn extern printf(fmt: *u8, ..) -> i32
fn extern write(fd: i32, buf: *u8, count: uint) -> i32

let stdout = 1

fn print(fmt: str) = {
	write(stdout, fmt.ptr, fmt.len)
}

fn println(fmt: str) = {
	print(fmt)
	print("\n")
}

fn main = {
	println("Hello, World!")
	hello()
	run(print_answer)
	run1(print_answer)
	run2(print_answer)
	run3(print_answer)
	do_add(add, 1, 2)
	printf("num = %d\n".ptr, map(1, id))
}

fn print_answer() = {
	printf("The answer is %d\n".ptr, answer)
}

fn add(a: int, b: int) -> int = {
	a + b
}

fn do_add(f: fn(int, int) -> int, a: int, b: int) = {
	printf("a + b = %d\n".ptr, f(a, b))
}

fn run(f: fn) = { f() }
fn run1(f: fn()) = { f() }
fn run2(f: fn() -> unit) = { f() }
fn run3(f: fn -> unit) = { f() }

fn id[a](x: a) -> a = { x }

fn map[a, b](val: a, f: fn(a) -> b) -> b = {
	f(val)
}
