fn extern printf(fmt: *u8, ..) -> i32

type Point extern(x: int, y: int)

fn main {
	let screen_width = 800
	let screen_height = 450

	InitWindow(screen_width, screen_height, "raylib - basic window".ptr)
	SetTargetFPS(60)

	let mut ball_position = Vector2({screen_width / 2} as f32, {screen_height / 2} as f32)

	loop if !WindowShouldClose() {
		if IsKeyDown(KEY_RIGHT) { ball_position.x += 2.0 }
        if IsKeyDown(KEY_LEFT) { ball_position.x -= 2.0 }
        if IsKeyDown(KEY_UP) { ball_position.y -= 2.0 }
        if IsKeyDown(KEY_DOWN) { ball_position.y += 2.0 }

		BeginDrawing()
		ClearBackground(RAYWHITE)
		DrawText("move the ball with arrow keys".ptr, 10, 10, 20, DARKGRAY)
		DrawCircleV(ball_position, 50.0, MAROON)
		EndDrawing()
	}

	CloseWindow()
}

// Raylib bindings
import extern "raylib"
import extern "m"

fn extern InitWindow(width: i32, height: i32, title: *u8)
fn extern CloseWindow()
fn extern WindowShouldClose() -> bool
fn extern SetTargetFPS(fps: i32)
fn extern BeginDrawing()
fn extern EndDrawing()
fn extern ClearBackground(color: Color)
fn extern DrawCircle(center_x: i32, center_y: i32, radius: f32, color: Color)
fn extern DrawCircleV(center: Vector2, radius: f32, color: Color)
fn extern DrawRectangle(pos_x: i32, pos_y: i32, width: i32, height: i32, color: Color)
fn extern DrawFPS(pos_x: i32, pos_y: i32)
fn extern DrawText(text: *u8, pos_x: i32, pos_y: i32, font_size: i32, tint: Color)

type Color extern(r: u8, g: u8, b: u8, a: u8)

let RAYWHITE = Color(245, 245, 245, 255)
let LIGHTGRAY = Color(200, 200, 200, 255)
let DARKGRAY = Color(80, 80, 80, 255)
let MAROON = Color(190, 33, 55, 255)

type Vector2 extern(x: f32, y: f32)

fn extern IsKeyDown(key: i32) -> bool

let KEY_RIGHT = 262
let KEY_LEFT = 263
let KEY_DOWN = 264
let KEY_UP = 265

