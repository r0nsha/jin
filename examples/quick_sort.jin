fn main() = {
    let mut slice = [1, 3, 42, 487, 5, 66, 4055, 33]
    print("Before: ")
    slice.print()
    quick_sort(&mut slice)
    print("After: ")
    slice.print()
}

fn quick_sort(slice: &mut []int) = {
    let len = slice.len

    if len < 2 {
        return
    }

    let pivot_idx = partition(&mut slice)
    quick_sort(&mut slice[0..pivot_idx])
    quick_sort(&mut slice[pivot_idx + 1..len])
}

fn partition(slice: &mut []int) -> uint = {
    let len = slice.len
    let pivot_idx = len / 2
    let last_idx = len - 1

    slice.swap(pivot_idx, last_idx)

    let mut store_idx = 0
    let mut i = 0
    for if i < last_idx {
        if slice[i] < slice[last_idx] {
            slice.swap(i, store_idx)
            store_idx += 1
        }

        i += 1
    }

    slice.swap(store_idx, len - 1)
    store_idx
}

fn print(slice: &[]int) = {
    let mut i = 0
    for if i < slice.len {
        print("\(slice[i]) ")
        i += 1
    }
    println()
}
