fn extern "c" printf(fmt: ptr[u8], ..) -> i32

fn main() = {
	unsafe printf("Reference semantics:\n".data)
	ref_type()
	unsafe printf("\n".data)

	unsafe printf("Value semantics (extern):\n".data)
	ext_type()
}

type Ref(field: int)

fn ref_type() = {
	let mut r = Ref(1)
	print(&r) # should be 1

	r.field = 2
	print(&r) # should be 2

	r.mutate()
	print(&r) # should be 3
}

fn mutate(r: &mut Ref) = {
	r.field = 3
}

fn print(r: &Ref) = {
	unsafe printf("Ref(field: %d)\n".data, r.field)
}

type Ext extern(field: int)

fn ext_type() = {
	let mut ext = Ext(1)
	print(ext) # should be 1

	ext.field = 2
	print(ext) # should be 2

	ext.mutate()
	print(ext) # should still be 2
}

fn mutate(mut ext: Ext) = {
	ext.field = 3
}

fn print(ext: Ext) = {
	unsafe printf("Ext(field: %d)\n".data, ext.field)	
}

